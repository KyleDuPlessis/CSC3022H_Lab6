Applying the algorithm that uses only perceptrons:

AND logic: 
Number of iterations: 5
Weight 1: 0.4
Weight 2: 0.4
Weight 3: 0.4
0 0 0
1 0 0
0 1 0
1 1 1

OR logic: 
Number of iterations: 4
Weight 1: 0.4
Weight 2: 0.4
Weight 3: 0.7
0 0 0
1 0 1
0 1 1
1 1 1

NAND logic: 
Number of iterations: 12
Weight 1: -0.1
Weight 2: -0.2
Weight 3: 1.2
0 0 1
1 0 1
0 1 1
1 1 0

All perceptrons trained successfully.

XOR logic: 
1 1 0
1 0 1
0 1 1
0 0 0

Question 1:
The minimum number of perceptrons required to solve the XOR problem is 3.
Since the XOR logic gate can be implemented as a combination of OR, NAND and AND logic gates, 
the logic equation can be written as follows:
A XOR B = (A OR B) AND (A NAND B)
The perceptrons should be connected in two layers with the outputs of the first layer 
feeding into the inputs of the second layer as shown visually below:

PERCEPTRON OR--------------\             		   
							PERCEPTRON AND------------>XOR OUTPUT
PERCEPTRON NAND------------/

Question 2:
12 training examples altogether (i.e. 4 for each logic gate found in AND.txt, OR.txt and NAND.txt).
